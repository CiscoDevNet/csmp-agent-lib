/*
 *  Copyright 2021 Cisco Systems, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

syntax = "proto3";

// TLV 1
message TlvIndex {
  repeated string tlvid = 1;
}

// TLV 2
message DeviceID {
  oneof type_present {
  uint32 type = 1;
  }
  oneof id_present {
  string id = 2;
  }
}

// TLV 7
message SessionID {
  oneof id_present {
    string id = 1;
  }
}

// TLV 8
message DescriptionRequest {
  repeated string tlvid = 1;
}

// TLV 13
message ReportSubscribe {
  oneof interval_present {
  uint32 interval = 1;
  }
  repeated string tlvid = 2;
}

// TLV 42
message CGMSSettings {
  oneof regIntervalMin_present {
  uint32 regIntervalMin = 1;
  }
  oneof regIntervalMax_present {
  uint32 regIntervalMax = 2;
  }
}

// TLV 43
message CGMSStatus {
  oneof registered_present {
  bool registered = 1;
  }
  oneof NMSAddr_present {
  bytes NMSAddr = 2;
  }
  oneof NMSAddrOrigin_present {
  uint32 NMSAddrOrigin = 3;
  }
  oneof lastReg_present {
  uint32 lastReg = 4;
  }
  oneof lastRegReason_present {
  uint32 lastRegReason = 5;
  }
  oneof nextReg_present {
  uint32 nextReg = 6;
  }
  oneof NMSCertValid_present {
  bool NMSCertValid = 7;
  }
}

// TLV 44
message CGMSNotification {
  oneof code_present {
  uint32 code = 1;
  }
  repeated uint32 tlvs = 2;
}

// TLV 45
message CGMSStats {
  oneof sigOk_present {
  uint32 sigOk = 1;
  }
  oneof sigBadAuth_present {
  uint32 sigBadAuth = 2;
  }
  oneof sigBadValidity_present {
  uint32 sigBadValidity = 3;
  }
  oneof sigNoSync_present {
  uint32 sigNoSync = 4;
  }
  oneof regSucceed_present {
  uint32 regSucceed = 5;
  }
  oneof regAttempts_present {
  uint32 regAttempts = 6;
  }
  oneof regHolds_present {
  uint32 regHolds = 7;
  }
  oneof regFails_present {
  uint32 regFails = 8;
  }
  oneof nmsErrors_present {
  uint32 nmsErrors = 9;
  }
}

// TLV 55
message GroupAssign {
  oneof type_present {
  uint32 type = 1;
  }
  oneof id_present {
  uint32 id = 2;
  }
}

// TLV 57
message GroupMatch {
  oneof type_present {
  uint32 type = 1;
  }
  oneof id_present {
  uint32 id = 2;
  }
}

// TLV 58
message GroupInfo {
  oneof type_present {
  uint32 type = 1;
  }
  oneof id_present {
  uint32 id = 2;
  }
}

// TLV 76
message SignatureValidity {
  oneof notBefore_present {
  uint32 notBefore = 1;
  }
  oneof notAfter_present {
  uint32 notAfter = 2;
  }
}

// TLV 77
message Signature {
  oneof value_present {
  bytes value = 1;
  }
}

// TLV 79
message SignatureSettings {
  oneof reqSignedPost_present {
  bool reqSignedPost = 1;
  }
  oneof reqValidCheckPost_present {
  bool reqValidCheckPost = 2;
  }
  oneof reqTimeSyncPost_present {
  bool reqTimeSyncPost = 3;
  }
  oneof reqSecLocalPost_present {
  bool reqSecLocalPost = 4;
  }
  oneof reqSignedResp_present {
  bool reqSignedResp = 5;
  }
  oneof reqValidCheckResp_present {
  bool reqValidCheckResp = 6;
  }
  oneof reqTimeSyncResp_present {
  bool reqTimeSyncResp = 7;
  }
  oneof reqSecLocalResp_present {
  bool reqSecLocalResp = 8;
  }
  oneof cert_present {
  bytes cert = 9;
  }
}

// TLV 11
message HardwareDesc {
  oneof entPhysicalIndex_present {
  int32 entPhysicalIndex = 1;
  }
  oneof entPhysicalDescr_present {
  string entPhysicalDescr = 2;
  }
  oneof entPhysicalVendorType_present {
  bytes entPhysicalVendorType = 3;
  }
  oneof entPhysicalContainedIn_present {
  int32 entPhysicalContainedIn = 4;
  }
  oneof entPhysicalClass_present {
  int32 entPhysicalClass = 5;
  }
  oneof entPhysicalParentRelPos_present {
  int32 entPhysicalParentRelPos = 6;
  }
  oneof entPhysicalName_present {
  string entPhysicalName = 7;
  }
  oneof entPhysicalHardwareRev_present {
  string entPhysicalHardwareRev = 8;
  }
  oneof entPhysicalFirmwareRev_present {
  string entPhysicalFirmwareRev = 9;
  }
  oneof entPhysicalSoftwareRev_present {
  string entPhysicalSoftwareRev = 10;
  }
  oneof entPhysicalSerialNum_present {
  string entPhysicalSerialNum = 11;
  }
  oneof entPhysicalMfgName_present {
  string entPhysicalMfgName = 12;
  }
  oneof entPhysicalModelName_present {
  string entPhysicalModelName = 13;
  }
  oneof entPhysicalAssetID_present {
  string entPhysicalAssetID = 14;
  }
  oneof entPhysicalMfgDate_present {
  uint32 entPhysicalMfgDate = 15;
  }
  oneof entPhysicalURIs_present {
  string entPhysicalURIs = 16;
  }
  oneof entPhysicalFunction_present {
  uint32 entPhysicalFunction = 17;
  }
  oneof entPhysicalOUI_present {
    string entPhysicalOUI = 18;
  }
}

// TLV 12
message InterfaceDesc {
  oneof ifIndex_present {
  int32 ifIndex = 1;
  }
  oneof ifName_present {
  string ifName = 2;
  }
  oneof ifDescr_present {
  string ifDescr = 3;
  }
  oneof ifType_present {
  int32 ifType = 4;
  }
  oneof ifMtu_present {
  int32 ifMtu = 5;
  }
  oneof ifPhysAddress_present {
  bytes ifPhysAddress = 6;
  }
}

// TLV 16
message IPAddress {
  oneof ipAddressIndex_present {
  int32 ipAddressIndex = 1;
  }
  oneof ipAddressAddrType_present {
  uint32 ipAddressAddrType = 2;
  }
  oneof ipAddressAddr_present {
  bytes ipAddressAddr = 3;
  }
  oneof ipAddressIfIndex_present {
  int32 ipAddressIfIndex = 4;
  }
  oneof ipAddressType_present {
  uint32 ipAddressType = 5;
  }
  oneof ipAddressOrigin_present {
  uint32 ipAddressOrigin = 6;
  }
  oneof ipAddressStatus_present {
  uint32 ipAddressStatus = 7;
  }
  oneof ipAddressCreated_present {
  uint32 ipAddressCreated = 8;
  }
  oneof ipAddressLastChanged_present {
  uint32 ipAddressLastChanged = 9;
  }
  oneof ipAddressPfxLen_present {
  uint32 ipAddressPfxLen = 10;
  }
}

// TLV 17
message IPRoute {
  oneof inetCidrRouteIndex_present {
  int32 inetCidrRouteIndex = 1;
  }
  oneof inetCidrRouteDestType_present {
  uint32 inetCidrRouteDestType = 2;
  }
  oneof inetCidrRouteDest_present {
  bytes inetCidrRouteDest = 3;
  }
  oneof inetCidrRoutePfxLen_present {
  uint32 inetCidrRoutePfxLen = 4;
  }
  oneof inetCidrRouteNextHopType_present {
  uint32 inetCidrRouteNextHopType = 5;
  }
  oneof inetCidrRouteNextHop_present {
  bytes inetCidrRouteNextHop = 6;
  }
  oneof inetCidrRouteIfIndex_present {
  int32 inetCidrRouteIfIndex = 7;
  }
  oneof inetCidrRouteType_present {
  uint32 inetCidrRouteType = 8;
  }
  oneof inetCidrRouteProto_present {
  uint32 inetCidrRouteProto = 9;
  }
  oneof inetCidrRouteAge_present {
  uint32 inetCidrRouteAge = 10;
  }
}

// TLV 18
message CurrentTime {
  oneof posix_present {
  uint32 posix = 1;
  }
  oneof iso8601_present {
  string iso8601 = 2;
  }
  oneof source_present {
  uint32 source = 3;
  }
}

// TLV 22
message Uptime {
  oneof sysUpTime_present {
  uint32 sysUpTime = 1;
  }
}

// TLV 23
message InterfaceMetrics {
  oneof ifIndex_present {
  int32 ifIndex = 1;
  }
  oneof ifInSpeed_present {
  uint32 ifInSpeed = 2;
  }
  oneof ifOutSpeed_present {
  uint32 ifOutSpeed = 3;
  }
  oneof ifAdminStatus_present {
  uint32 ifAdminStatus = 4;
  }
  oneof ifOperStatus_present {
  uint32 ifOperStatus = 5;
  }
  oneof ifLastChange_present {
  uint32 ifLastChange = 6;
  }
  oneof ifInOctets_present {
  uint32 ifInOctets = 7;
  }
  oneof ifOutOctets_present {
  uint32 ifOutOctets = 8;
  }
  oneof ifInDiscards_present {
  uint32 ifInDiscards = 9;
  }
  oneof ifInErrors_present {
  uint32 ifInErrors = 10;
  }
  oneof ifOutDiscards_present {
  uint32 ifOutDiscards = 11;
  }
  oneof ifOutErrors_present {
  uint32 ifOutErrors = 12;
  }
}

// TLV 25
message IPRouteRPLMetrics {
  oneof inetCidrRouteIndex_present {
  int32 inetCidrRouteIndex = 1; // refers to a particular index in the IPRoute table
  }
  oneof instanceIndex_present {
  int32 instanceIndex = 2; // Corresponding RPL instance of this route
  }
  oneof rank_present {
  int32 rank = 3; // advertised rank
  }
  oneof hops_present {
  int32 hops = 4; // not necessary now, but here so we can easily add later once we're propagating hops as a metric
  }
  oneof pathEtx_present {
  int32 pathEtx = 5;  // advertised path ethx
  }
  oneof linkEtx_present {
  int32 linkEtx = 6;  // next-hop link ETX
  }
  oneof rssiForward_present {
  sint32 rssiForward = 7;
  }
  oneof rssiReverse_present {
  sint32 rssiReverse = 8;
  }
  oneof lqiForward_present {
  int32 lqiForward = 9;
  }
  oneof lqiReverse_present {
  int32 lqiReverse = 10;
  }
  oneof dagSize_present {
  uint32 dagSize = 11;
  }
}

// TLV 35
message WPANStatus {
  oneof ifIndex_present {
  int32 ifIndex = 1;
  }
  oneof SSID_present {
  bytes SSID = 2;
  }
  oneof panid_present {
  uint32 panid = 3;
  }
  oneof master_present {
  bool master = 4;
  }
  oneof dot1xEnabled_present {
  bool dot1xEnabled = 5;
  }
  oneof securityLevel_present {
  uint32 securityLevel = 6;
  }
  oneof rank_present {
  uint32 rank = 7;
  }
  oneof beaconValid_present {
  bool beaconValid = 8;
  }
  oneof beaconVersion_present {
  uint32 beaconVersion = 9;
  }
  oneof beaconAge_present {
  uint32 beaconAge = 10;
  }
  oneof txPower_present {
  int32 txPower = 11;
  }
  oneof dagSize_present {
  uint32 dagSize = 12;
  }
  oneof metric_present {
  uint32 metric = 13;
  }
  oneof lastChanged_present {
  uint32 lastChanged = 14;
  }
  oneof lastChangedReason_present {
  uint32 lastChangedReason = 15;
  }
  oneof demoModeEnabled_present {
  bool demoModeEnabled = 16;
  }
}

// TLV 53
message RPLInstance {
  oneof instanceIndex_present {
  int32 instanceIndex = 1;
  }
  oneof instanceId_present {
  int32 instanceId = 2;
  }
  oneof doDagId_present {
  bytes doDagId = 3;
  }
  oneof doDagVersionNumber_present {
  int32 doDagVersionNumber = 4;
  }
  oneof rank_present {
  int32 rank = 5;
  }
  oneof parentCount_present {
  int32 parentCount = 6; // Count of available parents
  }
  oneof dagSize_present {
  uint32 dagSize = 7;
  }
}

message HardwareInfo {
  oneof hwId_present {
  string hwId = 1;
  }
  oneof vendorHwId_present {
  string vendorHwId = 2;
  }
}

// TLV 65 TRANSFER_REQUEST_TLVID
message TransferRequest {
  HardwareInfo hwInfo = 1;
  oneof fileHash_present {
  bytes fileHash = 2;
  }
  oneof fileName_present {
  string fileName = 3;
  }
  oneof version_present {
  string version = 4;
  }
  oneof fileSize_present {
  uint32 fileSize = 5;
  }
  oneof blockSize_present {
  uint32 blockSize = 6;
  }
  oneof reportIntervalMin_present {
  uint32 reportIntervalMin = 7;
  }
  oneof reportIntervalMax_present {
  uint32 reportIntervalMax = 8;
  }
  oneof isPatch_present {
  uint32 isPatch = 9;
  }
  oneof chopSize_present {
  uint32 chopSize = 10;
  }
  oneof runVersion_present {
  string runVersion = 11;
  }
}

// TLV 67 IMAGE_BLOCK_TLVID
message ImageBlock {
  oneof fileHash_present {
  bytes fileHash = 1;
  }
  oneof blockNum_present {
  uint32 blockNum = 2;
  }
  oneof blockData_present {
  bytes blockData = 3;
  }
}

// TLV 68 LOAD_REQUEST_TLVID
message LoadRequest {
  oneof fileHash_present {
  bytes fileHash = 1;
  }
  oneof loadTime_present {
  uint32 loadTime = 2;
  }
}

// TLV 69 CANCEL_LOAD_REQUEST_TLVID
message CancelLoadRequest {
  oneof fileHash_present {
    bytes fileHash = 1;
  }
}

// TLV 70 SET_BACKUP_REQUEST_TLVID
message SetBackupRequest {
  oneof fileHash_present {
  bytes fileHash = 1;
  }
}

// TLV 71 TRANSFER_RESPONSE_TLVID
message TransferResponse {
  oneof fileHash_present {
  bytes fileHash = 1;
  }
  oneof response_present {
  uint32 response = 2;
  }
}

// TLV 72 LOAD_RESPONSE_TLVID
message LoadResponse {
  oneof fileHash_present {
  bytes fileHash = 1;
  }
  oneof response_present {
  uint32 response = 2;
  }
  oneof loadTime_present {
  uint32 loadTime = 3;
  }
}

// TLV 73 CANCEL_LOAD_RESPONSE_TLVID
message CancelLoadResponse {
  oneof fileHash_present {
  bytes fileHash = 1;
  }
  oneof response_present {
  uint32 response = 2;
  }
}

// TLV 74 SET_BACKUP_RESPONSE_TLVID
message SetBackupResponse {
  oneof fileHash_present {
  bytes fileHash = 1;
  }
  oneof response_present {
  uint32 response = 2;
  }
}

// TLV 75 FIRMWARE_IMAGE_INFO_TLVID
message FirmwareImageInfo {
  oneof index_present {
  uint32 index = 1;
  }
  oneof fileHash_present {
  bytes fileHash = 2;
  }
  oneof fileName_present {
  string fileName = 3;
  }
  oneof version_present {
  string version = 4;
  }
  oneof fileSize_present {
  uint32 fileSize = 5;
  }
  oneof blockSize_present {
  uint32 blockSize = 6;
  }
  oneof bitmap_present {
  bytes bitmap = 7;
  }
  oneof isDefault_present {
  bool isDefault = 8;
  }
  oneof isRunning_present {
  bool isRunning = 9;
  }
  oneof loadTime_present {
  uint32 loadTime = 10;
  }
  HardwareInfo hwInfo = 11;
  // oneof bitmapOffset_present {
  // uint32 bitmapOffset = 12;
  // }
  //oneof kernelVersion_present {
  //string kernelVersion = 13;
  //}
  //oneof subKernelVersion_present {
  //string subKernelVersion = 14;
  //}
  //oneof isPatch_present {
  //uint32 isPatch = 15;
  //}
  //oneof loadErrorCode_present {
  //uint32 loadErrorCode = 16;
  //}
  //oneof subLoadErrorCode_present {
  //uint32 subLoadErrorCode = 17;
  //}
}

// TLV 127 VENDOR_TLVID
message VendorTlv {
  oneof subType_present {
  uint32 subType = 1;
  }
  oneof value_present {
  bytes value = 2;
  }
}
